Given an array A of N elements. The task is to count number of even and odd elements in the array.

Input:
First line of input contains number of testcases T. For each testcase, there will be two line of input, first line of which contains N and next line contains N array elements.

Output:
For each testcase, print the number of odd elements first and then number of even elements seperated by space in a single line.

User Task:
Your task is to complete the function countOddEven() which should print number of odd and number of even elements in a single line seperated by space.

Constraints:
1 <= T <= 100
1 <= N <= 106
1 <= Ai <= 106

Example:
Input:
1
5
1 2 3 4 5

Output:
3 2

Explanation:
Testcase 1: In the given array, there are 3 odd elements (1, 3, 5) and 2 even elements (2 and 4).

Solutions:

#include<iostream> 
using namespace std; 
  
void CountingEvenOdd(int arr[], int arr_size) 
{ 
    int even_count = 0;              
    int odd_count = 0;              
          
    // loop to read all the values in the array 
    for(int i = 0 ; i < arr_size ; i++)  
    { 
        // checking if a number is completely 
        // divisible by 2 
        if (arr[i] & 1 == 1) 
            odd_count ++ ;          
        else                     
            even_count ++ ;          
    } 
  
    cout << "Number of even elements = " << even_count  
         << "\nNumber of odd elements = " << odd_count ;          
} 
  
// Driver Code 
int main() 
{ 
    int arr[] = {2, 3, 4, 5, 6}; 
    int n = sizeof(arr) / sizeof(arr[0]); 
    CouningEvenOdd(arr, n); 
}  
